{"version":3,"sources":["images/avatar.jpg","components/layout/PortfolioHeader.jsx","components/pages/Contact.jsx","components/abstract/Project.jsx","data/projects.js","components/pages/Projects.jsx","components/pages/Technologies.jsx","components/layout/PortfolioTabs.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","avatar","width","spacing","height","marginRight","aboutText","fontStyle","PortfolioHeader","props","classes","Container","maxWidth","Box","display","flexDirection","justifyContent","alignItems","my","Avatar","alt","src","MyAvatar","className","Typography","flexGrow","variant","component","color","Contact","Link","href","target","style","fontSize","root","marginBottom","pos","Project","name","description","learnMoreUrl","demoUrl","Card","CardContent","CardActions","Button","size","projects","Projects","projectList","map","index","console","log","key","toString","Technologies","List","ListItem","ListItemText","primary","Divider","TabPanel","children","value","other","role","hidden","id","aria-labelledby","p","a11yProps","PortfolioTabs","useTheme","React","useState","setValue","mt","Paper","square","Tabs","onChange","event","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e0b99e23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.7894d337.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Container, Typography, Box, Avatar } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MyAvatar from '../../images/avatar.jpg';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  avatar: {\r\n    width: theme.spacing(18),\r\n    height: theme.spacing(18),\r\n    marginRight: 18,\r\n  },\r\n  aboutText: {\r\n    fontStyle: 'oblique',\r\n  },\r\n}));\r\n\r\nconst PortfolioHeader = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        my={1}\r\n      >\r\n        <Avatar\r\n          alt=\"Anton Synytsia\"\r\n          src={MyAvatar}\r\n          className={classes.avatar}\r\n        />\r\n        <Typography\r\n          flexGrow={1}\r\n          variant=\"body1\"\r\n          component=\"p\"\r\n          color=\"textSecondary\"\r\n          className={classes.aboutText}\r\n        >\r\n          Greetings! I am Anton Synytsia, a Computer Science graduate of 2019. I\r\n          am passionate about physics engines, robotics, aerodynamics, and\r\n          full-stack development.\r\n        </Typography>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nPortfolioHeader.propTypes = {};\r\n\r\nexport default PortfolioHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link, Container, Typography, Box, Avatar } from '@material-ui/core';\r\n\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst Contact = props => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n      <Link\r\n        href=\"https://linkedin.com/in/anton-synytsia-5a1422170\"\r\n        target=\"_blank\"\r\n      >\r\n        <LinkedInIcon style={{ fontSize: 64 }} />\r\n      </Link>\r\n      <Link href=\"https://github.com/AntonSynytsia\" target=\"_blank\">\r\n        <GitHubIcon style={{ fontSize: 64, color: '#222' }} />\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\n\r\nContact.propTypes = {};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: 12,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst Project = ({ name, description, learnMoreUrl, demoUrl }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.pos}>\r\n          {name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        {learnMoreUrl && (\r\n          <Button\r\n            size=\"small\"\r\n            href={learnMoreUrl}\r\n            target=\"_blank\"\r\n            color=\"default\"\r\n          >\r\n            Learn More\r\n          </Button>\r\n        )}\r\n        {demoUrl && (\r\n          <Button size=\"small\" href={demoUrl} target=\"_blank\" color=\"primary\">\r\n            Live Demo\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProject.propTypes = {};\r\n\r\nexport default Project;\r\n","const projects = [\r\n  {\r\n    name: 'Pizza Ordering App',\r\n    description:\r\n      'A pizza ordering app built with React, Redux, and Bootstrap 4; contains multiple views for choosing pizza crust type, topology, and entering customer information.',\r\n    demoUrl: 'https://antonsynytsia.github.io/jump-redux-pizza/index.html',\r\n    learnMoreUrl: 'https://github.com/AntonSynytsia/redux-pizza-jump-2020',\r\n  },\r\n  {\r\n    name: 'My Portfolio',\r\n    description:\r\n      \"A React and Material UI app, you're currently viewing, designed to showcase my works and a little about myself.\",\r\n    demoUrl: 'https://antonsynytsia.github.io/index.html',\r\n    learnMoreUrl: 'https://github.com/AntonSynytsia/iprofile',\r\n  },\r\n  {\r\n    name: 'JUMP Showcase App',\r\n    description:\r\n      'A full-stack web application designed for handling authentication with Express Session built as part of JUMP curriculum; utilizes MySQL and Sequelize. Includes custom designed and animated Carousel, Gallery, and Todo Apps. Note: The demo only shows the front-end.',\r\n    demoUrl: '',\r\n    learnMoreUrl: 'https://github.com/AntonSynytsia/showcase-app',\r\n  },\r\n  {\r\n    name: 'AstroClimb',\r\n    description:\r\n      'A full-stack web application designed to market my ClothWorks and MSPhysics products. Built with React, Redux, Express, MongoDB/Firestore. Hosted at Google Cloud Platform via Docker. Includes JWT authentication, reCATCHA, and email verification. Note: Repository is private; REST API design is based on devconnectors Udemy course, which is also on my GitHub.',\r\n    demoUrl: 'https://astroclimb.appspot.com/',\r\n    learnMoreUrl: '',\r\n  },\r\n  {\r\n    name: 'Micro Air Vehicle Challenge',\r\n    description:\r\n      \"As my Senior Capstone project, designed an express App to stream camera and sensor feed from the Raspberry Pi to a pilot's laptop, over Wifi. Comes with a connection system, which allows the devices to identify each others IP addresses; designed with NodeJs, Express, and Python; utilizes TCP for streaming.\",\r\n    demoUrl: '',\r\n    learnMoreUrl: 'https://github.com/NathanTan/SeniorCapstone',\r\n  },\r\n  {\r\n    name: 'Angular Dev Logger',\r\n    description:\r\n      'A ToDo logger designed with Angular 8, following a Udemy course.',\r\n    demoUrl: 'https://antonsynytsia.github.io/angular-logger/index.html',\r\n    learnMoreUrl: 'https://github.com/AntonSynytsia/clientpanel',\r\n  },\r\n  {\r\n    name: 'React Native Goal Logger',\r\n    description:\r\n      'A goal-logger app designed with React Native, following a Udemy course.',\r\n    demoUrl: '',\r\n    learnMoreUrl: 'https://github.com/AntonSynytsia/rn-first-app',\r\n  },\r\n];\r\nexport default projects;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Project from '../abstract/Project';\r\nimport projectList from '../../data/projects';\r\n\r\nconst Projects = props => {\r\n  return (\r\n    <div>\r\n      {projectList.map(\r\n        ({ name, description, learnMoreUrl, demoUrl }, index) => {\r\n          console.log(index);\r\n          return (\r\n            <Project\r\n              key={'pr' + index.toString()}\r\n              name={name}\r\n              description={description}\r\n              learnMoreUrl={learnMoreUrl}\r\n              demoUrl={demoUrl}\r\n            />\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProjects.propTypes = {};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst Technologies = props => {\r\n  return (\r\n    <div>\r\n      <List component=\"nav\">\r\n        <ListItem>\r\n          <ListItemText primary=\"React with Redux\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"Angular 6+ (WIP Udemy)\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"AngularJs\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem>\r\n          <ListItemText primary=\"Bootstrap 4\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"Material UI\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem>\r\n          <ListItemText primary=\"NodeJs\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"Express\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"MySQL and Sequelize\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"MongoDB and Mongoose\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"JSON Web Tokens\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem>\r\n          <ListItemText primary=\"React Native (WIP Udemy)\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem>\r\n          <ListItemText primary=\"JavaScript (ES7)\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"CSS\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"HTML\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem>\r\n          <ListItemText primary=\"C++\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"Ruby\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"Python\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem>\r\n          <ListItemText primary=\"Windows API\" />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary=\"SketchUp API\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechnologies.propTypes = {};\r\n\r\nexport default Technologies;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Tabs, Tab, Typography, Box, Paper } from '@material-ui/core';\r\n\r\nimport Contact from '../pages/Contact';\r\nimport Projects from '../pages/Projects';\r\nimport Technologies from '../pages/Technologies';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={2}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  // root: {\r\n  //   backgroundColor: theme.palette.background.paper,\r\n  // },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst PortfolioTabs = props => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Paper square className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab label=\"Projects\" {...a11yProps(0)} />\r\n          <Tab label=\"Technologies\" {...a11yProps(1)} />\r\n          <Tab label=\"Contact\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Paper>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Projects />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Technologies />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <Contact />\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPortfolioTabs.propTypes = {};\r\n\r\nexport default PortfolioTabs;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport PortfolioHeader from './layout/PortfolioHeader';\r\nimport PortfolioTabs from './layout/PortfolioTabs';\r\n\r\nconst Main = props => {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <PortfolioHeader />\r\n      <PortfolioTabs />\r\n    </Container>\r\n  );\r\n};\r\n\r\nMain.propTypes = {};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}